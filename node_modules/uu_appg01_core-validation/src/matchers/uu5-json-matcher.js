"use strict";

const { Json } = require("uu_appg01_core-utils");
const Matcher = require("../matcher.js");
const ValidationResult = require("../validation-result.js");
const Validator = require("../validator.js");
const MatcherError = require("../matcher-error.js");

class _Uu5Json extends Matcher {

  constructor(...params) {
    super("uu5Json", ...params);
  }

  processParams(...params) {
    if (params.length === 1) {
      this.maxLength = params[0];
      if (typeof this.maxLength !== "number") {
        throw new MatcherError("Uu5Json: invalid parameter0, expected Boolean");
      }
    } else if (params.length > 1) {
      throw new MatcherError("Uu5Json: wrong number of parameters, expected 0..1");
    }
  }

  match(value, ctx) {
    let result = new ValidationResult();
    if (value == undefined) {
      return result;
    }

    if (typeof value === "string" || value instanceof String) {
      if (this._isJsonString(value.substr("<uu5json/>".length)) && value.indexOf("<uu5json/>") === 0) {
        let pefixLength = "<uu5json/>".length;
        if (this.maxLength != null && value.length - pefixLength > this.maxLength) {
          result.addInvalidValueError("uu5Json.e002", `The value must not be longer than ${this.maxLength} characters.`);
        }
      } else {
        result.addInvalidValueError("uu5Json.e001", "The value must be uu5Json.");
      }
    } else {
      result.addInvalidTypeError("uu5Json.e001", "The value must be uu5Json.");
    }

    return result;
  }

  _isJsonString(str) {
    try {
      Json.parse(str);
    } catch (e) {
      return false;
    }
    return true;
  }

}

function Uu5Json(...params) {
  let matcher = new _Uu5Json(...params);
  if (this && this.matchers && this.matchers[0]) {
    this.matchers.push(matcher);
    return this;
  } else {
    let validator = new Validator(null);
    validator._loadMatchers();
    validator.matchers = [matcher];
    return validator;
  }
}

module.exports = Uu5Json;
