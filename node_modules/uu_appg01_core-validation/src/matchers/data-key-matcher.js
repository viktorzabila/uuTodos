"use strict";

const Matcher = require("../matcher.js");
const ValidationResult = require("../validation-result.js");
const Validator = require("../validator.js");

const DATA_KEY_REGEXP = /^[0-9a-zA-Z_-]{3,256}$/;

class _DataKey extends Matcher {

  constructor() {
    super("dataKey");
  }

  match(value, ctx) {
    let result = new ValidationResult();
    if (value == undefined) {
      return result;
    }

    if (typeof value === "string" || value instanceof String) {
      if (!value.match(DATA_KEY_REGEXP)) {
        result.addInvalidValueError("dataKey.e001", "The value must be dataKey.");
      }
    } else {
      result.addInvalidTypeError("dataKey.e001", "The value must be dataKey.");
    }

    return result;
  }

}

function DataKey() {
  let matcher = new _DataKey();
  if (this && this.matchers && this.matchers[0]) {
    this.matchers.push(matcher);
    return this;
  } else {
    let validator = new Validator(null);
    validator._loadMatchers();
    validator.matchers = [matcher];
    return validator;
  }
}

module.exports = DataKey;
