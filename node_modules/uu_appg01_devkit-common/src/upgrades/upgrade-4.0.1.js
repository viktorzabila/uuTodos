const fs = require("fs-extra");
const path = require("path");

const { VALUE_PLACEHOLDER, APP_JSON_KEY_ORDER } = require("../tools/constants.js");
const Package = require("../tools/package.js");
const ProjectConfig = require("../config/project-config.js");
const upgradeVersion = __filename.replace(/.*upgrade-(.*)\.js$/, "$1");

module.exports = async function (config, templateInfo) {
  let { type } = templateInfo;
  // if (type === "nodejs-multi") return; // no changes for the top-level project itself

  if (type === "nodejs-multi") {
    // fix "name" and "workspaces" settings if workspace contains more than 1 library
    // (if a library was added in 4.0.0 it overwrote the fields with itself, instead of adding itself)
    let libraryList = new ProjectConfig().getWorkspaceLibraryList(true);
    if (libraryList.length > 1) {
      let uuappJson = JSON.parse(fs.readFileSync("uuapp.json", "utf-8"));
      let rootPkg = JSON.parse(fs.readFileSync("package.json", "utf-8"));
      if (uuappJson.product) rootPkg.name = Package.parseProduct(uuappJson.product).name;
      rootPkg.workspaces = libraryList.map(it =>it.name).sort();
      rootPkg = Package.sort(rootPkg);
      fs.writeFileSync("package.json", JSON.stringify(rootPkg, null, 2) + "\n", "utf-8");
      fs.writeFileSync("pnpm-workspace.yaml", [`packages:`, ...rootPkg.workspaces].join("\n  - ") + "\n", "utf-8");
    }
  } else if (type === "nodejs-app" || type === "nodejs-service") {
    console.log(
      `${upgradeVersion} Removing resourcePoolUri-s for nodejs-app and nodejs-service projects from uuapp.json.`
    );
    let name = config.get("name");
    let uuappJson = JSON.parse(fs.readFileSync("../uuapp.json", "utf-8"));

    let envs = listEnvironments();
    let resourcePoolUris = {};
    for (let env of envs) {
      let uuCloudEnvJsonPath = path.join("env", `uucloud-${env}.json`);
      let uuCloudEnvJson = JSON.parse(fs.readFileSync(uuCloudEnvJsonPath, "utf-8"));
      let rpu = ((uuCloudEnvJson || {}).uuSubApp || {}).resourcePoolUri;
      if (rpu) resourcePoolUris[env] = rpu;
    }
    let devkit = (uuappJson[name] && uuappJson[name].devkit) || uuappJson.devkit;
    let devkitKeyPath = devkit === uuappJson.devkit ? `$.devkit` : `$.${name}.devkit`;
    for (let env in devkit) {
      if (!devkit[env]) continue;
      let { resourcePoolUri } = devkit[env];
      if (resourcePoolUri && resourcePoolUri !== VALUE_PLACEHOLDER && resourcePoolUri !== resourcePoolUris[env]) {
        console.warn(
          `  WARN ${devkitKeyPath}.${env}.resourcePoolUri (${resourcePoolUri}) differs from the one in env/uucloud-${env}.json (${resourcePoolUris[env]}). Value in env/... wins.`
        );
      }
      delete devkit[env].resourcePoolUri;
    }

    uuappJson = Package.sort(uuappJson, APP_JSON_KEY_ORDER);
    fs.writeFileSync("../uuapp.json", JSON.stringify(uuappJson, null, 2) + "\n", "utf-8");
  }
};

function listEnvironments() {
  return fs.existsSync("env")
    ? fs
        .readdirSync("env")
        .filter((it) => it.match(/^uucloud-[a-zA-Z0-9_-]+\.json$/))
        .map((it) => it.slice("uucloud-".length, -".json".length))
    : [];
}
