"use strict";

const Sys = require("./sys.js");
const { Sysmon } = require("uu_appg01_core-perflog");
const statistics = require("../monitoring/statistics.js");

/**
 * Provides server usage statistics.
 * @note This endpoint depends on {UuApp::AppServer::Middleware::Monitor} middleware.
 */
class GetStatistics {

  static call(ucEnv) {
    Sys.authorize(ucEnv);
    return {
      ...Sys.getAppInfo(),
      serverStartTime: statistics.startTime,
      serverUptime: statistics.uptime(),
      statisticsResetTime: statistics.resetTime,
      statisticsCollectingTime: statistics.collectingUptime(),
      lastRequestTime: statistics.lastRequestTime,
      lastClientErrorTime: statistics.lastClientErrorTime,
      lastServerErrorTime: statistics.lastServerErrorTime,
      requestCount: statistics.requestCount,
      clientErrorCount: statistics.clientErrorCount,
      serverErrorCount: statistics.serverErrorCount,
      concurrentRequests: statistics.concurrentRequests,
      averageRequestTime: statistics.averageRequestTime(),
      requestTimeMedian: statistics.requestTimePercentile(50),
      requestTime90Percentile: statistics.requestTimePercentile(90),
      fastestRequestTime: statistics.minRequestTime(),
      slowestRequestTime: statistics.maxRequestTime(),
      // TODO Async statistics, App statistics providers
      ...GetStatistics._getSystemStats(),
      uuAppErrorMap: {}
    };
  }

  static _getSystemStats() {
    let stats = Sysmon.getStatistics();
    return {
      systemCpuLoad: stats.cpuLoad,
      systemMemoryUsed: stats.memUsage >= 0 ? Math.round(stats.memUsage / 1048576) : -1,
      systemMemoryLimit: stats.memLimit >= 0 ? Math.round(stats.memLimit / 1048576) : -1,
      systemPageCache: stats.pageCache >= 0 ? Math.round(stats.pageCache / 1048576) : -1,
      systemRss: stats.rss >= 0 ? Math.round(stats.rss / 1048576) : -1
    };
  }

}

module.exports = GetStatistics;
