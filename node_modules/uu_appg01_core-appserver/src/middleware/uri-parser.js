"use strict";

const { Perflog } = require("uu_appg01_core-perflog");
const { Uri } = require("uu_appg01_core-uri");
const BadRequest = require("../error/bad-request.js");
const UseCaseContext = require("../endpoint/use-case-context.js");
const UriResolver = require("../utils/uri-resolver.js");

const MIDDLEWARE_ORDER = -200;

/**
 * Encapsulates the uu_appg01_core-uri module for use as
 * an Express middleware.
 */
class UriParser {

  constructor() {
    this.order = MIDDLEWARE_ORDER;
  }

  /**
   * Since Express doesn't provide an easy way to get the full
   * request URL, it is constructed from individual parts.
   * BadRequest is thrown on UriParser errors.
   * @param req
   * @param res
   * @param next
   * @private
   */
  async pre(req, res, next) {
    try {
      await Perflog.measureSection("UU_APP_SERVER_PARSE_URI", () => {
        let rawUri = UriResolver.getUri(req);
        let parsedUri = Uri.parse(rawUri);
        UseCaseContext.setUri(parsedUri);
        res.locals.uri = parsedUri;
        let baseUriAlias = req.get("X-Base-Uri-Alias");
        if (baseUriAlias) {
          baseUriAlias = baseUriAlias.split(";")[0].trim().replace(/\/$/, "");
          UseCaseContext.setBaseUriAlias(baseUriAlias);
          res.locals.baseUriAlias = baseUriAlias;
        }
      });
      next();
    } catch (err) {
      next(new BadRequest("Request URI is not valid.", err));
    }
  }

}

/**
 * Module exports UriParser constructor.
 * @type {UriParser}
 */
module.exports = UriParser;
