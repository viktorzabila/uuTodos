"use strict";var cov_z0txz12s=function(){var path="C:\\todos\\uu_todos_maing01-server\\app\\abl\\list-abl.js";var hash="0d0c0bff75ba980332d4b7c357021eb287887524";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\todos\\uu_todos_maing01-server\\app\\abl\\list-abl.js",statementMap:{"0":{start:{line:2,column:13},end:{line:2,column:28}},"1":{start:{line:3,column:22},end:{line:3,column:60}},"2":{start:{line:4,column:23},end:{line:4,column:62}},"3":{start:{line:5,column:29},end:{line:5,column:66}},"4":{start:{line:6,column:15},end:{line:6,column:53}},"5":{start:{line:8,column:17},end:{line:28,column:1}},"6":{start:{line:32,column:4},end:{line:32,column:38}},"7":{start:{line:33,column:4},end:{line:33,column:45}},"8":{start:{line:34,column:4},end:{line:34,column:45}},"9":{start:{line:35,column:4},end:{line:35,column:53}},"10":{start:{line:39,column:17},end:{line:39,column:30}},"11":{start:{line:42,column:27},end:{line:42,column:78}},"12":{start:{line:43,column:4},end:{line:48,column:6}},"13":{start:{line:49,column:4},end:{line:51,column:5}},"14":{start:{line:50,column:6},end:{line:50,column:26}},"15":{start:{line:52,column:4},end:{line:54,column:5}},"16":{start:{line:53,column:6},end:{line:53,column:35}},"17":{start:{line:55,column:4},end:{line:57,column:5}},"18":{start:{line:56,column:6},end:{line:56,column:37}},"19":{start:{line:61,column:24},end:{line:61,column:58}},"20":{start:{line:63,column:4},end:{line:65,column:5}},"21":{start:{line:64,column:6},end:{line:64,column:84}},"22":{start:{line:67,column:4},end:{line:72,column:5}},"23":{start:{line:68,column:6},end:{line:71,column:8}},"24":{start:{line:76,column:19},end:{line:76,column:37}},"25":{start:{line:78,column:15},end:{line:78,column:48}},"26":{start:{line:82,column:4},end:{line:85,column:6}},"27":{start:{line:89,column:17},end:{line:89,column:30}},"28":{start:{line:92,column:27},end:{line:92,column:80}},"29":{start:{line:93,column:4},end:{line:98,column:6}},"30":{start:{line:100,column:4},end:{line:102,column:5}},"31":{start:{line:101,column:6},end:{line:101,column:32}},"32":{start:{line:106,column:24},end:{line:106,column:58}},"33":{start:{line:108,column:4},end:{line:110,column:5}},"34":{start:{line:109,column:6},end:{line:109,column:84}},"35":{start:{line:112,column:4},end:{line:117,column:5}},"36":{start:{line:113,column:6},end:{line:116,column:8}},"37":{start:{line:121,column:19},end:{line:121,column:57}},"38":{start:{line:122,column:4},end:{line:124,column:5}},"39":{start:{line:123,column:6},end:{line:123,column:84}},"40":{start:{line:127,column:20},end:{line:127,column:63}},"41":{start:{line:128,column:18},end:{line:128,column:68}},"42":{start:{line:129,column:4},end:{line:129,column:25}},"43":{start:{line:130,column:21},end:{line:130,column:44}},"44":{start:{line:134,column:4},end:{line:138,column:5}},"45":{start:{line:135,column:6},end:{line:135,column:119}},"46":{start:{line:137,column:6},end:{line:137,column:58}},"47":{start:{line:142,column:23},end:{line:142,column:41}},"48":{start:{line:143,column:4},end:{line:143,column:44}},"49":{start:{line:146,column:4},end:{line:148,column:6}},"50":{start:{line:152,column:17},end:{line:152,column:30}},"51":{start:{line:153,column:25},end:{line:153,column:59}},"52":{start:{line:157,column:29},end:{line:157,column:79}},"53":{start:{line:158,column:4},end:{line:163,column:6}},"54":{start:{line:167,column:4},end:{line:169,column:5}},"55":{start:{line:168,column:6},end:{line:168,column:84}},"56":{start:{line:170,column:4},end:{line:176,column:5}},"57":{start:{line:171,column:6},end:{line:175,column:8}},"58":{start:{line:180,column:21},end:{line:180,column:59}},"59":{start:{line:181,column:4},end:{line:183,column:5}},"60":{start:{line:182,column:6},end:{line:182,column:63}},"61":{start:{line:187,column:4},end:{line:190,column:6}},"62":{start:{line:194,column:17},end:{line:194,column:30}},"63":{start:{line:195,column:25},end:{line:195,column:59}},"64":{start:{line:199,column:29},end:{line:199,column:82}},"65":{start:{line:200,column:4},end:{line:205,column:6}},"66":{start:{line:209,column:4},end:{line:211,column:5}},"67":{start:{line:210,column:6},end:{line:210,column:84}},"68":{start:{line:212,column:4},end:{line:218,column:5}},"69":{start:{line:213,column:6},end:{line:217,column:8}},"70":{start:{line:221,column:19},end:{line:221,column:37}},"71":{start:{line:223,column:4},end:{line:229,column:5}},"72":{start:{line:224,column:24},end:{line:224,column:51}},"73":{start:{line:225,column:26},end:{line:225,column:36}},"74":{start:{line:226,column:6},end:{line:228,column:7}},"75":{start:{line:227,column:8},end:{line:227,column:110}},"76":{start:{line:233,column:15},end:{line:233,column:19}},"77":{start:{line:235,column:4},end:{line:239,column:5}},"78":{start:{line:236,column:6},end:{line:236,column:49}},"79":{start:{line:238,column:6},end:{line:238,column:74}},"80":{start:{line:243,column:4},end:{line:246,column:6}},"81":{start:{line:250,column:17},end:{line:250,column:30}},"82":{start:{line:253,column:29},end:{line:253,column:82}},"83":{start:{line:254,column:4},end:{line:259,column:6}},"84":{start:{line:262,column:19},end:{line:262,column:23}},"85":{start:{line:263,column:4},end:{line:263,column:54}},"86":{start:{line:265,column:4},end:{line:267,column:5}},"87":{start:{line:266,column:6},end:{line:266,column:90}},"88":{start:{line:271,column:4},end:{line:277,column:5}},"89":{start:{line:272,column:24},end:{line:272,column:51}},"90":{start:{line:273,column:26},end:{line:273,column:36}},"91":{start:{line:274,column:6},end:{line:276,column:7}},"92":{start:{line:275,column:8},end:{line:275,column:110}},"93":{start:{line:280,column:4},end:{line:280,column:34}},"94":{start:{line:281,column:4},end:{line:285,column:5}},"95":{start:{line:282,column:6},end:{line:282,column:53}},"96":{start:{line:284,column:6},end:{line:284,column:74}},"97":{start:{line:288,column:4},end:{line:291,column:6}},"98":{start:{line:295,column:0},end:{line:295,column:31}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:16},end:{line:36,column:3}},line:31},"1":{name:"(anonymous_1)",decl:{start:{line:38,column:2},end:{line:38,column:3}},loc:{start:{line:38,column:45},end:{line:86,column:3}},line:38},"2":{name:"(anonymous_2)",decl:{start:{line:88,column:2},end:{line:88,column:3}},loc:{start:{line:88,column:56},end:{line:149,column:3}},line:88},"3":{name:"(anonymous_3)",decl:{start:{line:151,column:2},end:{line:151,column:3}},loc:{start:{line:151,column:44},end:{line:191,column:3}},line:151},"4":{name:"(anonymous_4)",decl:{start:{line:193,column:2},end:{line:193,column:3}},loc:{start:{line:193,column:47},end:{line:247,column:3}},line:193},"5":{name:"(anonymous_5)",decl:{start:{line:249,column:2},end:{line:249,column:3}},loc:{start:{line:249,column:47},end:{line:292,column:3}},line:249}},branchMap:{"0":{loc:{start:{line:38,column:25},end:{line:38,column:43}},type:"default-arg",locations:[{start:{line:38,column:41},end:{line:38,column:43}}],line:38},"1":{loc:{start:{line:49,column:4},end:{line:51,column:5}},type:"if",locations:[{start:{line:49,column:4},end:{line:51,column:5}},{start:{line:49,column:4},end:{line:51,column:5}}],line:49},"2":{loc:{start:{line:52,column:4},end:{line:54,column:5}},type:"if",locations:[{start:{line:52,column:4},end:{line:54,column:5}},{start:{line:52,column:4},end:{line:54,column:5}}],line:52},"3":{loc:{start:{line:55,column:4},end:{line:57,column:5}},type:"if",locations:[{start:{line:55,column:4},end:{line:57,column:5}},{start:{line:55,column:4},end:{line:57,column:5}}],line:55},"4":{loc:{start:{line:63,column:4},end:{line:65,column:5}},type:"if",locations:[{start:{line:63,column:4},end:{line:65,column:5}},{start:{line:63,column:4},end:{line:65,column:5}}],line:63},"5":{loc:{start:{line:67,column:4},end:{line:72,column:5}},type:"if",locations:[{start:{line:67,column:4},end:{line:72,column:5}},{start:{line:67,column:4},end:{line:72,column:5}}],line:67},"6":{loc:{start:{line:88,column:36},end:{line:88,column:54}},type:"default-arg",locations:[{start:{line:88,column:52},end:{line:88,column:54}}],line:88},"7":{loc:{start:{line:100,column:4},end:{line:102,column:5}},type:"if",locations:[{start:{line:100,column:4},end:{line:102,column:5}},{start:{line:100,column:4},end:{line:102,column:5}}],line:100},"8":{loc:{start:{line:108,column:4},end:{line:110,column:5}},type:"if",locations:[{start:{line:108,column:4},end:{line:110,column:5}},{start:{line:108,column:4},end:{line:110,column:5}}],line:108},"9":{loc:{start:{line:112,column:4},end:{line:117,column:5}},type:"if",locations:[{start:{line:112,column:4},end:{line:117,column:5}},{start:{line:112,column:4},end:{line:117,column:5}}],line:112},"10":{loc:{start:{line:122,column:4},end:{line:124,column:5}},type:"if",locations:[{start:{line:122,column:4},end:{line:124,column:5}},{start:{line:122,column:4},end:{line:124,column:5}}],line:122},"11":{loc:{start:{line:134,column:4},end:{line:138,column:5}},type:"if",locations:[{start:{line:134,column:4},end:{line:138,column:5}},{start:{line:134,column:4},end:{line:138,column:5}}],line:134},"12":{loc:{start:{line:134,column:8},end:{line:134,column:49}},type:"binary-expr",locations:[{start:{line:134,column:8},end:{line:134,column:35}},{start:{line:134,column:39},end:{line:134,column:49}}],line:134},"13":{loc:{start:{line:151,column:24},end:{line:151,column:42}},type:"default-arg",locations:[{start:{line:151,column:40},end:{line:151,column:42}}],line:151},"14":{loc:{start:{line:167,column:4},end:{line:169,column:5}},type:"if",locations:[{start:{line:167,column:4},end:{line:169,column:5}},{start:{line:167,column:4},end:{line:169,column:5}}],line:167},"15":{loc:{start:{line:170,column:4},end:{line:176,column:5}},type:"if",locations:[{start:{line:170,column:4},end:{line:176,column:5}},{start:{line:170,column:4},end:{line:176,column:5}}],line:170},"16":{loc:{start:{line:181,column:4},end:{line:183,column:5}},type:"if",locations:[{start:{line:181,column:4},end:{line:183,column:5}},{start:{line:181,column:4},end:{line:183,column:5}}],line:181},"17":{loc:{start:{line:193,column:27},end:{line:193,column:45}},type:"default-arg",locations:[{start:{line:193,column:43},end:{line:193,column:45}}],line:193},"18":{loc:{start:{line:209,column:4},end:{line:211,column:5}},type:"if",locations:[{start:{line:209,column:4},end:{line:211,column:5}},{start:{line:209,column:4},end:{line:211,column:5}}],line:209},"19":{loc:{start:{line:212,column:4},end:{line:218,column:5}},type:"if",locations:[{start:{line:212,column:4},end:{line:218,column:5}},{start:{line:212,column:4},end:{line:218,column:5}}],line:212},"20":{loc:{start:{line:223,column:4},end:{line:229,column:5}},type:"if",locations:[{start:{line:223,column:4},end:{line:229,column:5}},{start:{line:223,column:4},end:{line:229,column:5}}],line:223},"21":{loc:{start:{line:226,column:6},end:{line:228,column:7}},type:"if",locations:[{start:{line:226,column:6},end:{line:228,column:7}},{start:{line:226,column:6},end:{line:228,column:7}}],line:226},"22":{loc:{start:{line:249,column:27},end:{line:249,column:45}},type:"default-arg",locations:[{start:{line:249,column:43},end:{line:249,column:45}}],line:249},"23":{loc:{start:{line:265,column:4},end:{line:267,column:5}},type:"if",locations:[{start:{line:265,column:4},end:{line:267,column:5}},{start:{line:265,column:4},end:{line:267,column:5}}],line:265},"24":{loc:{start:{line:271,column:4},end:{line:277,column:5}},type:"if",locations:[{start:{line:271,column:4},end:{line:277,column:5}},{start:{line:271,column:4},end:{line:277,column:5}}],line:271},"25":{loc:{start:{line:274,column:6},end:{line:276,column:7}},type:"if",locations:[{start:{line:274,column:6},end:{line:276,column:7}},{start:{line:274,column:6},end:{line:276,column:7}}],line:274}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0],"23":[0,0],"24":[0,0],"25":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"0d0c0bff75ba980332d4b7c357021eb287887524"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const Path=(cov_z0txz12s.s[0]++,require("path"));const{Validator}=(cov_z0txz12s.s[1]++,require("uu_appg01_server").Validation);const{DaoFactory}=(cov_z0txz12s.s[2]++,require("uu_appg01_server").ObjectStore);const{ValidationHelper}=(cov_z0txz12s.s[3]++,require("uu_appg01_server").AppServer);const Errors=(cov_z0txz12s.s[4]++,require("../api/errors/list-error.js"));const WARNINGS=(cov_z0txz12s.s[5]++,{createUnsupportedKeys:{code:`${Errors.Create.UC_CODE}unsupportedKeys`},getUnsupportedKeys:{code:`${Errors.Get.UC_CODE}unsupportedKeys`},updateUnsupportedKeys:{code:`${Errors.Update.UC_CODE}unsupportedKeys`},listUnsupportedKeys:{code:`${Errors.List.UC_CODE}unsupportedKeys`},deleteUnsupportedKeys:{code:`${Errors.Delete.UC_CODE}unsupportedKeys`}});class ListAbl{constructor(){cov_z0txz12s.f[0]++;cov_z0txz12s.s[6]++;this.validator=Validator.load();cov_z0txz12s.s[7]++;this.listDao=DaoFactory.getDao("list");cov_z0txz12s.s[8]++;this.itemDao=DaoFactory.getDao("item");cov_z0txz12s.s[9]++;this.mainDao=DaoFactory.getDao("todoInstance");}async list(uri,dtoIn,uuAppErrorMap=(cov_z0txz12s.b[0][0]++,{})){cov_z0txz12s.f[1]++;const awid=(cov_z0txz12s.s[10]++,uri.getAwid());// HDS 1 Validation of dtoIn.
let validationResult=(cov_z0txz12s.s[11]++,this.validator.validate("listListDtoInType",dtoIn));cov_z0txz12s.s[12]++;uuAppErrorMap=ValidationHelper.processValidationResult(dtoIn,validationResult,WARNINGS.listUnsupportedKeys.code,Errors.List.InvalidDtoIn);cov_z0txz12s.s[13]++;if(!dtoIn.pageInfo){cov_z0txz12s.b[1][0]++;cov_z0txz12s.s[14]++;dtoIn.pageInfo={};}else{cov_z0txz12s.b[1][1]++;}cov_z0txz12s.s[15]++;if(!dtoIn.pageInfo.pageIndex){cov_z0txz12s.b[2][0]++;cov_z0txz12s.s[16]++;dtoIn.pageInfo.pageIndex=0;}else{cov_z0txz12s.b[2][1]++;}cov_z0txz12s.s[17]++;if(!dtoIn.pageInfo.pageSize){cov_z0txz12s.b[3][0]++;cov_z0txz12s.s[18]++;dtoIn.pageInfo.pageSize=1000;}else{cov_z0txz12s.b[3][1]++;}// HDS 2 System checks existence and state of the todoInstance uuObject.
const uuTodosMain=(cov_z0txz12s.s[19]++,await this.mainDao.getByAwid(awid));cov_z0txz12s.s[20]++;if(!uuTodosMain){cov_z0txz12s.b[4][0]++;cov_z0txz12s.s[21]++;throw new Errors.Delete.TodoInstanceDoesNotExist({uuAppErrorMap},{awid});}else{cov_z0txz12s.b[4][1]++;}cov_z0txz12s.s[22]++;if(uuTodosMain.state!=="active"){cov_z0txz12s.b[5][0]++;cov_z0txz12s.s[23]++;throw new Errors.Delete.TodoInstanceIsNotInProperState({uuAppErrorMap},{expectedState:"active",awid,currentState:uuTodosMain.state});}else{cov_z0txz12s.b[5][1]++;}// HDS 3 System loads from uuAppObjectStore basic attributes of all uuObject items by keys given in dtoIn, and saves them to dtoOut.itemList.
let uuObject=(cov_z0txz12s.s[24]++,{...dtoIn,awid});let item=(cov_z0txz12s.s[25]++,await this.listDao.list(uuObject));// HDS 4 Returns properly filled dtoOut.
cov_z0txz12s.s[26]++;return{...item,uuAppErrorMap};}async delete(uri,dtoIn,session,uuAppErrorMap=(cov_z0txz12s.b[6][0]++,{})){cov_z0txz12s.f[2]++;const awid=(cov_z0txz12s.s[27]++,uri.getAwid());// HDS 1 Validation of dtoIn.
let validationResult=(cov_z0txz12s.s[28]++,this.validator.validate("listDeleteDtoInType",dtoIn));cov_z0txz12s.s[29]++;uuAppErrorMap=ValidationHelper.processValidationResult(dtoIn,validationResult,WARNINGS.deleteUnsupportedKeys.code,Errors.Delete.InvalidDtoIn);cov_z0txz12s.s[30]++;if(!dtoIn.forceDelete){cov_z0txz12s.b[7][0]++;cov_z0txz12s.s[31]++;dtoIn.forceDelete=false;}else{cov_z0txz12s.b[7][1]++;}// HDS 2 System checks existence and state of the todoInstance uuObject.
const uuTodosMain=(cov_z0txz12s.s[32]++,await this.mainDao.getByAwid(awid));cov_z0txz12s.s[33]++;if(!uuTodosMain){cov_z0txz12s.b[8][0]++;cov_z0txz12s.s[34]++;throw new Errors.Delete.TodoInstanceDoesNotExist({uuAppErrorMap},{awid});}else{cov_z0txz12s.b[8][1]++;}cov_z0txz12s.s[35]++;if(uuTodosMain.state!=="active"){cov_z0txz12s.b[9][0]++;cov_z0txz12s.s[36]++;throw new Errors.Delete.TodoInstanceIsNotInProperState({uuAppErrorMap},{expectedState:"active",awid,currentState:uuTodosMain.state});}else{cov_z0txz12s.b[9][1]++;}// HDS 3 System gets the uuObject list from the uuAppObjectStore and checks its existence (using list DAO get with awid and dtoIn.id).
let uuObject=(cov_z0txz12s.s[37]++,await this.listDao.get(awid,dtoIn.id));cov_z0txz12s.s[38]++;if(!uuObject){cov_z0txz12s.b[10][0]++;cov_z0txz12s.s[39]++;throw new Errors.Delete.ListDoesNotExist({uuAppErrorMap},{id:dtoIn.id});}else{cov_z0txz12s.b[10][1]++;}// HDS 4 System loads all active items related to the list (using item DAO listByListAndState, where listId = dtoIn.id and state = active) and verifies that count of active items in the list is 0.
let filterMap=(cov_z0txz12s.s[40]++,{awid,listId:dtoIn.id,state:"active"});let uuItems=(cov_z0txz12s.s[41]++,await this.itemDao.listByListIdAndState(filterMap));cov_z0txz12s.s[42]++;console.log(uuItems);let itemLength=(cov_z0txz12s.s[43]++,uuItems.itemList.length);// HDS 5 System deletes all item uuObjects in the list from uuAppObjectStore (using item DAO deleteManyByListId with awid and dtoIn.id).
cov_z0txz12s.s[44]++;if((cov_z0txz12s.b[12][0]++,dtoIn.forceDelete===false)&&(cov_z0txz12s.b[12][1]++,itemLength)){cov_z0txz12s.b[11][0]++;cov_z0txz12s.s[45]++;throw new Errors.Delete.ListContainsActiveItems({uuAppErrorMap},{id:dtoIn.id,itemList:uuItems.itemList});}else{cov_z0txz12s.b[11][1]++;cov_z0txz12s.s[46]++;await this.itemDao.deleteManyByList(awid,dtoIn.id);}// HDS 6 System deletes list from the uuAppObjectStore (using list DAO delete with awid and dtoIn.id).
let uuDeleteList=(cov_z0txz12s.s[47]++,{...dtoIn,awid});cov_z0txz12s.s[48]++;await this.listDao.delete(uuDeleteList);// HDS 7 Returns properly filled dtoOut.
cov_z0txz12s.s[49]++;return{uuAppErrorMap};}async get(uri,dtoIn,uuAppErrorMap=(cov_z0txz12s.b[13][0]++,{})){cov_z0txz12s.f[3]++;const awid=(cov_z0txz12s.s[50]++,uri.getAwid());const TodoInstance=(cov_z0txz12s.s[51]++,await this.mainDao.getByAwid(awid));// HDS 1 - Validation of dtoIn.
const validationResult=(cov_z0txz12s.s[52]++,this.validator.validate("listGetDtoInType",dtoIn));cov_z0txz12s.s[53]++;uuAppErrorMap=ValidationHelper.processValidationResult(dtoIn,validationResult,WARNINGS.getUnsupportedKeys.code,Errors.Get.InvalidDtoIn);// HDS 2 Checks state.
cov_z0txz12s.s[54]++;if(!TodoInstance){cov_z0txz12s.b[14][0]++;cov_z0txz12s.s[55]++;throw new Errors.Create.TodoInstanceDoesNotExist({uuAppErrorMap},{awid});}else{cov_z0txz12s.b[14][1]++;}cov_z0txz12s.s[56]++;if(TodoInstance.state!=="active"){cov_z0txz12s.b[15][0]++;cov_z0txz12s.s[57]++;throw new Errors.Create.TodoInstanceIsNotInProperState({uuAppErrorMap},{currentState:todoInstance.state},{expectedState:"active",awid});}else{cov_z0txz12s.b[15][1]++;}//HDS3 Creates uuObject list in uuAppObjectStore (using list DAO create).
const uuObject=(cov_z0txz12s.s[58]++,await this.listDao.get(awid,dtoIn.id));cov_z0txz12s.s[59]++;if(!uuObject){cov_z0txz12s.b[16][0]++;cov_z0txz12s.s[60]++;throw new Errors.Get.ListDoesNotExist({uuAppErrorMap});}else{cov_z0txz12s.b[16][1]++;}// HDS4 Returns properly filled dtoOut.
cov_z0txz12s.s[61]++;return{uuAppErrorMap,...uuObject};}async create(uri,dtoIn,uuAppErrorMap=(cov_z0txz12s.b[17][0]++,{})){cov_z0txz12s.f[4]++;const awid=(cov_z0txz12s.s[62]++,uri.getAwid());const TodoInstance=(cov_z0txz12s.s[63]++,await this.mainDao.getByAwid(awid));// HDS 1 - Validation of dtoIn.
const validationResult=(cov_z0txz12s.s[64]++,this.validator.validate("listCreateDtoInType",dtoIn));cov_z0txz12s.s[65]++;uuAppErrorMap=ValidationHelper.processValidationResult(dtoIn,validationResult,WARNINGS.createUnsupportedKeys.code,Errors.Create.InvalidDtoIn);// HDS 2 Checks state.
cov_z0txz12s.s[66]++;if(!TodoInstance){cov_z0txz12s.b[18][0]++;cov_z0txz12s.s[67]++;throw new Errors.Create.TodoInstanceDoesNotExist({uuAppErrorMap},{awid});}else{cov_z0txz12s.b[18][1]++;}cov_z0txz12s.s[68]++;if(TodoInstance.state!=="active"){cov_z0txz12s.b[19][0]++;cov_z0txz12s.s[69]++;throw new Errors.Create.TodoInstanceIsNotInProperState({uuAppErrorMap},{currentState:TodoInstance.state},{expectedState:"active",awid});}else{cov_z0txz12s.b[19][1]++;}// HDS 3 verifies that date is not from past
let uuObject=(cov_z0txz12s.s[70]++,{...dtoIn,awid});cov_z0txz12s.s[71]++;if(uuObject.deadline){cov_z0txz12s.b[20][0]++;const inputDate=(cov_z0txz12s.s[72]++,new Date(uuObject.deadline));const currentDate=(cov_z0txz12s.s[73]++,new Date());cov_z0txz12s.s[74]++;if(inputDate.getTime()<currentDate.getTime()){cov_z0txz12s.b[21][0]++;cov_z0txz12s.s[75]++;throw new Errors.Create.DeadlineDateIsFromThePast({uuAppErrorMap},{deadline:uuObject.deadline});}else{cov_z0txz12s.b[21][1]++;}}else{cov_z0txz12s.b[20][1]++;}//HDS4 Creates uuObject list in uuAppObjectStore (using list DAO create).
let list=(cov_z0txz12s.s[76]++,null);cov_z0txz12s.s[77]++;try{cov_z0txz12s.s[78]++;list=await this.listDao.create(uuObject);}catch(err){cov_z0txz12s.s[79]++;throw new Errors.Create.ListDaoCreateFailed({uuAppErrorMap},err);}// HDS5 Returns properly filled dtoOut.
cov_z0txz12s.s[80]++;return{...list,uuAppErrorMap};}async update(uri,dtoIn,uuAppErrorMap=(cov_z0txz12s.b[22][0]++,{})){cov_z0txz12s.f[5]++;const awid=(cov_z0txz12s.s[81]++,uri.getAwid());// HDS 1 - Validation of dtoIn.
const validationResult=(cov_z0txz12s.s[82]++,this.validator.validate("listUpdateDtoInType",dtoIn));cov_z0txz12s.s[83]++;uuAppErrorMap=ValidationHelper.processValidationResult(dtoIn,validationResult,WARNINGS.updateUnsupportedKeys.code,Errors.Update.InvalidDtoIn);// HDS 2 - find(check existance) "=> Update"
let uuObject=(cov_z0txz12s.s[84]++,null);cov_z0txz12s.s[85]++;uuObject=await this.listDao.get(awid,dtoIn.id);cov_z0txz12s.s[86]++;if(!uuObject){cov_z0txz12s.b[23][0]++;cov_z0txz12s.s[87]++;throw Errors.Update.TodoInstanceDoesNotExist({uuAppErrorMap},{tema:dtoIn.id});}else{cov_z0txz12s.b[23][1]++;}// HDS 3 verifies that date is not from past
cov_z0txz12s.s[88]++;if(uuObject.deadline){cov_z0txz12s.b[24][0]++;const inputDate=(cov_z0txz12s.s[89]++,new Date(uuObject.deadline));const currentDate=(cov_z0txz12s.s[90]++,new Date());cov_z0txz12s.s[91]++;if(inputDate.getTime()<currentDate.getTime()){cov_z0txz12s.b[25][0]++;cov_z0txz12s.s[92]++;throw new Errors.Create.DeadlineDateIsFromThePast({uuAppErrorMap},{deadline:uuObject.deadline});}else{cov_z0txz12s.b[25][1]++;}}else{cov_z0txz12s.b[24][1]++;}// HDS 4 - update
cov_z0txz12s.s[93]++;uuObject={...dtoIn,awid};cov_z0txz12s.s[94]++;try{cov_z0txz12s.s[95]++;uuObject=await this.listDao.update(uuObject);}catch(err){cov_z0txz12s.s[96]++;throw new Errors.Update.ListDaoUpdateFailed({uuAppErrorMap},err);}// HDS 5 - return
cov_z0txz12s.s[97]++;return{...uuObject,uuAppErrorMap};}}cov_z0txz12s.s[98]++;module.exports=new ListAbl();