/*!
 * UAF COMMERCIAL LICENSE
 * ----------------------
 * 1. PREAMBLE and Definitions
 *   1.1 These UAF Commercial License Terms (“UAF CLT”) govern licensing of the Unicorn Application Framework (UAF).
 *     The Customer and Unicorn concluded an agreement for the provision of Solution that is using UAF or its parts
 *     (the “Agreement”).
 *   1.2 The provisions of these UAF CLT shall govern the relationship between the Customer and Unicorn regarding
 *     the UAF License granted under the Agreement. For the avoidance of doubt, in case of any conflict between these
 *     UAF CLT and the Agreement, the provisions of the Agreement always prevail.
 *   1.3 The “UAF Components”, and each of them individually as “UAF Component”, shall mean the components of the Unicorn
 *     Application Framework, which are listed and described in the Attachment I to these UAF CLT.
 *   1.4 “UAF” shall mean the Unicorn Application Framework the scope of which is described in Attachment I, including all
 *     associated documentation and preparatory design materials, in particular blueprints, models, user manuals,
 *     training materials, comprehensive instructions and guidelines for drafting, production, operation and maintenance of
 *     software solutions, reference architecture, ready-made components and tools, use cases and tutorials.
 *   1.5 The “Knowledge Base” shall mean the online materials, internet fora and other resources made available by Unicorn
 *     online with regard to the UAF, intended for the broad customer and developer community.
 *   1.6 The “License” shall mean the binding terms and conditions for use of the UAF by the Customer. The License is
 *     described in Clause 2 and may be further specified or modified by the Agreement.
 *   1.7 The “Solution” shall mean any product or service developed under the Agreement using the UAF or any of
 *     UAF Components or its other parts, further specified in the Agreement.
 * 2. LICENSE GRANT
 *   2.1 The Customer shall be hereby granted a non-exclusive and non-transferable worldwide license to use the UAF for
 *     the purpose of the Solution described in the Agreement. For this purpose, the Customer shall be entitled to modify
 *     the UAF and create derivative works based on the UAF.
 *   2.2 The Customer is entitled to grant third parties a sub-license allowing them to use the UAF or any derivative works
 *     based on the UAF under commercial terms of its choice, provided that:
 *     2.2.1 use of the UAF and any derivative works based on the UAF by third parties is limited to testing, handover and
 *       operation of the Solution or its use as a service,
 *     2.2.2 third parties are not entitled to use the UAF or any derivative works based on the UAF independently of
 *       the Solution,
 *     2.2.3 third parties are not provided access to source code of the UAF unless such right is granted by the Agreement
 *       or if they conclude a commercial license agreement with Unicorn.
 *   2.3 The Solution or its parts based on the UAF shall bear a prominent copyright notice “Based on Unicorn Application
 *     Framework Copyright (c) Unicorn” integrated
 *     2.3.1 in the graphical user interface of the Solution or its relevant part or
 *     2.3.2 in accompanying file if the Solution or its relevant part do not have graphical user interface or
 *     2.3.3 in Solution´s documentation.
 *   2.4 The License shall be valid for the whole duration of copyright to the UAF, unless other duration of the License is
 *     specified in the Agreement.
 *   2.5 The Customer is entitled to access the Knowledge Base only if expressly agreed in the Agreement.
 *   2.6 The Unicorn retains all rights to the UAF not covered by the provisions of this Clause 2. Unless explicitly
 *     permitted by applicable law, the Customer may not use the UAF in any other way than provided by the provisions of
 *     this Clause 2 and may not allow such use on its behalf by any of its employees or agents.
 *   2.7 The price for the License is included in the price stipulated in the Agreement.
 * 3. MODIFICATIONS
 *   3.1 The Customer explicitly acknowledges that the UAF is under continuous development and any UAF Component or other
 *     part of the UAF may be modified, replaced or removed by the Unicorn from the UAF in any of its future versions.
 *   3.2 This License covers also any new version of UAF if some parts of the UAF are modified or replaced.
 *   3.3 If any part of the UAF is removed by Unicorn in any of its future versions, the License for such version of
 *     the UAF is reduced appropriately and covers only the remaining parts of UAF. Sub-licenses previously granted to
 *     third parties in accordance with Clause 2.2 remain unaffected.
 * 4. THIRD PARTY LICENSE TERMS
 *   4.1 UAF is using third party software tools (the “Third Party Software”) that is an integral part of the UAF. Some of
 *     these tools are free software or open-source SW.
 *   4.2 The list of Third Party Software used in the UAF including its license terms and authors is provided as part of
 *     Attachment I to these UAF CLT.
 *   4.3 For the use of the above mentioned Third Party Software, the Customer acknowledges its license terms referred to
 *     in Attachment I to these UAF CLT.
 * 5. NO TRADEMARK OR PATENT LICENSE
 *   5.1 These UAF CLT cover only copyright use of the UAF. If not expressly agreed otherwise, the Customer shall not be
 *     granted any trademark and/or patent license here under and nothing in these UAF CLT shall be interpreted in a way it
 *     does so.
 * 6. LIMITED WARRANTY
 *   6.1 IF NOT STIPULATED OTHER WISE OR REQUIRED BY APPLICABLE LAW, THE UAF IS PROVIDED ON “AS IS” BASIS,
 *     WITH NO WARRANTY OF, INCLUDING WITHOUT LIMITATION, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE
 *     RISK AS TO THE QUALITY AND PERFORMANCE OF THE UAF IS CARRIED SOLELY BY THE CUSTOMER, UNLESS OTHERWISE AGREED BETWEEN
 *     THE UNICORN AND THE CUSTOMER IN THE AGREEMENT.
 * 7. LIMITATION OF LIABILITY
 *   7.1 TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE UNICORN WILL NOT BE HELD LIABLE FOR ANY DAMAGES CAUSED BY
 *     THE DISTRIBUTION OR USE OF THE UAF. THIS ALSO INCLUDES ANY CONSEQUENTIAL AND/OR INCIDENTAL DAMAGES, MONETARY OR NOT,
 *     THAT ARE CONNECTED WITH THE DISTRIBUTION OR USE OF THE UAF, UNLESS OTHERWISE AGREED BETWEEN THE UNICORN AND
 *     THE CUSTOMER IN THE AGREEMENT.
 * 8. THIRD PARTY CLAIMS
 *   8.1 The Unicorn will defend or settle, at its option and expense, any action brought against the Customer in a member
 *     state of the European Union which concerns an allegation that the UAF provided infringes a patent or copyright or
 *     misappropriates a trade secret in such jurisdiction. The Unicorn shall pay costs and damages finally awarded against
 *     the Customer that are attributable to such action. The Customer declares to understand and agrees that following
 *     conditions must be fulfilled in order to make Unicorn´s obligations under this Clause 8 effective and enforceable:
 *     The Customer must (a) notify Unicorn promptly in writing of the action or any reasonable threat of it,
 *     (b) provide the Unicorn with all reasonable information and assistance it will request to settle or defend the action, and
 *     (c) grant the Unicorn sole authority and control of the defense or settlement of the action.
 *   8.2 If a claim is made under Clause 8.1 the Unicorn may, at its sole option and expense:
 *     (a) replace or modify the UAF so that it becomes non-infringing,
 *     (b) procure for the Customer the right to continue using the UAF unmodified.
 *   8.3 The Unicorn shall not be held liable to the Customer if the action is based on:
 *     (a) the combination of UAF with any product not provided by Unicorn,
 *     (b) the modification of the UAF other than by Unicorn,
 *     (c) the use of other than a current unaltered release of the UAF,
 *     (d) a product that the Customer makes, uses, or sells,
 *     (e) infringement by the Customer that is deemed willful. In the case under (e) the Customer shall reimburse
 *     the Unicorn for its reasonable attorney fees and other costs related to the action.
 *   8.4 THIS CLAUSE IS SUBJECT TO CLAUSE 7 AND STATES UNICORN´S ENTIRE LIABILITY, CUSTOMER´S SOLE AND EXCLUSIVE REMEDY,
 *     FOR DEFENSE, SETTLEMENT AND DAMAGES, WITH RESPECT TO ANY ALLEGED PATENT OR COPYRIGHT INFRINGEMENT OR TRADE SECRET
 *     MISAPPROPRIATION BY ANY ITEM PROVIDED UNDER THESE TERMS, UNLESS OTHERWISE AGREEMENT BETWEEN UNICORN AND THE CUSTOMER
 *     IN THE AGREEMENT.
 * 9. GENERAL PROVISIONS
 *   9.1 By entering into the Agreement, the Customer signifies its assent to and acceptance of these UAF CLT.
 *   9.2 The License is effective from the moment of execution of the Agreement, if the Agreement does not specify later
 *     date. Where the provisions of the Agreement regarding the License and provisions of these UAF CLT differ, provisions
 *     of the Agreement shall prevail.
 *   9.3 If any provision of the Agreement regarding the License or these UAF CLT is held by a court of competent
 *     jurisdiction to be void, invalid, unenforceable or illegal, such provision shall be severed from the Agreement or
 *     these UAF CLT and the remaining provisions will remain in full force and effect.
 *   9.4 The provisions of Clauses 7 and 8 shall survive any expiration or termination of the Agreement.
 *   9.5 All rights and obligations between the Unicorn and the Customer arising on the basis of these UAF CLT or
 *     in connection with them are governed by the laws of the Czech Republic with the exclusion of both the rules on
 *     the conflict of laws and the United Nations Convention on Contracts for the International Sale of Goods (CISG).
 *   9.6 The resolution of all disputes arising from or connected here to shall be under sole jurisdiction of the courts of
 *     the Czech Republic.
 */
(window["__webpack_jsonp_uu5tilesg02_1_18_2_uu5tilesg02"] = window["__webpack_jsonp_uu5tilesg02_1_18_2_uu5tilesg02"] || []).push([[1],{

/***/ 124:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DndGrid", function() { return DndGridWrapper; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _grid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(90);
/* harmony import */ var _internal_dnd_tile_wrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(120);
/* harmony import */ var _internal_dnd_drop_indicator_vertical__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(125);
/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8);
/* harmony import */ var _use_combined_refs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(46);
/* harmony import */ var _internal_with_nearest_scroll_element__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63);
/* harmony import */ var _internal_dnd_scroll_enhancer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(123);
/* harmony import */ var _internal_lazy_libraries__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(85);
var _templateObject, _templateObject2;

var _excluded = ["onDrop", "connectDropTarget", "isDragOver", "canDrop"];

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }











var DropTarget = _internal_lazy_libraries__WEBPACK_IMPORTED_MODULE_9__["default"]["react-dnd"].DropTarget; // NOTE Must be standard class component while we're using react-dnd@7.0.2 (to get component instance in dropTarget.hover()).

var DndGridWrapper = Object(uu5g04__WEBPACK_IMPORTED_MODULE_0__["createVisualComponent"])({
  displayName: "Uu5Tiles.DndGridWrapper",
  getInitialState: function getInitialState() {
    this._dndGrid = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Reference.create();
    return {};
  },
  getGrid: function getGrid() {
    return this._dndGrid.current;
  },
  render: function render() {
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(DndGrid, _extends({
      ref: this._dndGrid
    }, this.props));
  }
});
var DndGrid = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["createVisualComponent"])({
  displayName: "Uu5Tiles.DndGrid",
  render: function render(_ref, ref) {
    var onDrop = _ref.onDrop,
        connectDropTarget = _ref.connectDropTarget,
        isDragOver = _ref.isDragOver,
        canDrop = _ref.canDrop,
        gridComponentProps = _objectWithoutProperties(_ref, _excluded);

    var scrollElement = gridComponentProps.scrollElement;

    var _useGrid = Object(_grid__WEBPACK_IMPORTED_MODULE_2__["useGrid"])(_objectSpread(_objectSpread({}, gridComponentProps), {}, {
      _passDndProps: true
    })),
        render = _useGrid.render,
        gridProps = _useGrid.gridProps,
        displayedData = _useGrid.displayedData,
        data = _useGrid.data,
        itemKey = _useGrid.itemKey;

    var gridInnerRef = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useRef"])();
    var origInnerRef = gridProps.innerRef;
    gridProps.innerRef = Object(_use_combined_refs__WEBPACK_IMPORTED_MODULE_6__["useCombinedRefs"])(gridInnerRef, origInnerRef);
    var gridOuterRef = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useRef"])();
    var origOuterRef = gridProps.outerRef;
    gridProps.outerRef = Object(_use_combined_refs__WEBPACK_IMPORTED_MODULE_6__["useCombinedRefs"])(gridOuterRef, origOuterRef); // prepare information used during drag&drop for computing drop position

    var dropIndicatorRef = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useRef"])();
    var rowCount = gridProps.rowCount,
        columnCount = gridProps.columnCount;
    var getRowHeight = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useMemo"])(function () {
      return typeof gridProps.rowHeight === "function" ? gridProps.rowHeight : function () {
        return gridProps.rowHeight;
      };
    }, [gridProps.rowHeight]);
    var droppingAfterIndexRef = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useRef"])(-1);
    Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useImperativeHandle"])(ref, function () {
      return {
        getDropIndicator: function getDropIndicator() {
          return dropIndicatorRef.current;
        },
        getRowCount: function getRowCount() {
          return rowCount;
        },
        getColumnCount: function getColumnCount() {
          return columnCount;
        },
        getRowHeight: getRowHeight,
        getInnerElement: function getInnerElement() {
          return gridInnerRef.current;
        },
        setDroppingAfterIndex: function setDroppingAfterIndex(index) {
          droppingAfterIndexRef.current = index;
        },
        getDroppedAfterItem: function getDroppedAfterItem() {
          return displayedData[droppingAfterIndexRef.current];
        },
        getData: function getData() {
          return data;
        },
        getItemKey: function getItemKey() {
          return itemKey;
        }
      };
    }, [getRowHeight, rowCount, columnCount, displayedData, data, itemKey]); // min-height reserves space to allow drag&dropping onto empty grid

    var minHeight = gridProps.estimatedRowHeight;
    if (!minHeight && typeof gridComponentProps.itemHeight === "number") minHeight = gridComponentProps.itemHeight;
    return uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create("div", {
      ref: connectDropTarget,
      className: _config_config_js__WEBPACK_IMPORTED_MODULE_5__["default"].Css.css(_templateObject || (_templateObject = _taggedTemplateLiteral(["position: relative; min-height: ", "px;"])), minHeight)
    }, render(gridProps, _internal_dnd_tile_wrapper__WEBPACK_IMPORTED_MODULE_3__["default"]), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create("div", {
      className: _config_config_js__WEBPACK_IMPORTED_MODULE_5__["default"].Css.css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; pointer-events: none;"])))
    }, uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_dnd_drop_indicator_vertical__WEBPACK_IMPORTED_MODULE_4__["default"], {
      ref: dropIndicatorRef,
      isDragOver: isDragOver
    })), uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create(_internal_dnd_scroll_enhancer__WEBPACK_IMPORTED_MODULE_8__["default"], {
      scrollElement: scrollElement || gridOuterRef.current
    }));
  }
}, true);
DndGrid = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Component.memo(Object(_internal_with_nearest_scroll_element__WEBPACK_IMPORTED_MODULE_7__["default"])(Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["withResize"])(DndGrid, true), function (scrollComponent, scrollTop) {
  return scrollComponent.scrollTo({
    scrollTop: scrollTop
  });
})); // NOTE Keep HOCs in sync with grid.js.

DndGrid.propTypes = _objectSpread(_objectSpread({}, _grid__WEBPACK_IMPORTED_MODULE_2__["Grid"].propTypes), {}, {
  onDrop: uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes.func
});
DndGrid.defaultProps = _objectSpread(_objectSpread({}, _grid__WEBPACK_IMPORTED_MODULE_2__["Grid"].defaultProps), {}, {
  onDrop: undefined
});
var dropTarget = {
  hover: function hover(props, monitor, component) {
    if (!component) return;
    var gridComponent = component.getGrid();
    if (!gridComponent) return;
    var gridEl = gridComponent.getInnerElement();
    var columnCount = gridComponent.getColumnCount();
    var rowCount = gridComponent.getRowCount();
    var getRowHeight = gridComponent.getRowHeight;
    var dropIndicator = gridComponent.getDropIndicator();

    if (dropIndicator && gridEl) {
      var mouseXY = monitor.getClientOffset();
      var gridElRect = gridEl.getBoundingClientRect();
      var mouseInGridTop = mouseXY.y - gridElRect.top;
      var cumulativeTotal = 0;
      var rowIndex = -1;

      for (var i = 0; i < rowCount; i++) {
        cumulativeTotal += getRowHeight(i);

        if (mouseInGridTop < cumulativeTotal) {
          rowIndex = i;
          break;
        }
      }

      var colIndex = -1;
      var bestDistance = 1e12;
      var before = false;
      var firstItemRect;
      var secondItemRect;
      var gridElIdx;

      for (gridElIdx = 0; gridElIdx < gridEl.children.length; gridElIdx += columnCount) {
        var rect = gridEl.children[gridElIdx].getBoundingClientRect();
        if (rect.top - gridElRect.top >= cumulativeTotal) break;
      }

      gridElIdx -= columnCount;

      if (gridElIdx >= 0) {
        for (var _i = 0; _i < columnCount && gridElIdx + _i < gridEl.children.length; _i++) {
          var tileEl = gridEl.children[gridElIdx + _i];
          var tileElRect = tileEl.getBoundingClientRect();
          var distance = mouseXY.x < tileElRect.left ? tileElRect.left - mouseXY.x : mouseXY.x > tileElRect.right ? mouseXY.x - tileElRect.right : 0;

          if (distance < bestDistance) {
            colIndex = _i;
            bestDistance = distance;
            before = mouseXY.x < (tileElRect.left + tileElRect.right) / 2;

            if (before) {
              firstItemRect = _i ? gridEl.children[gridElIdx + _i - 1].getBoundingClientRect() : null;
              secondItemRect = tileElRect;
            } else {
              firstItemRect = tileElRect;
              secondItemRect = _i < columnCount - 1 && gridElIdx + _i + 1 < gridEl.children.length ? gridEl.children[gridElIdx + _i + 1].getBoundingClientRect() : null;
            }
          }
        }
      }

      dropIndicator.setPosition(firstItemRect, secondItemRect);
      gridComponent.setDroppingAfterIndex(rowIndex >= 0 && colIndex >= 0 ? rowIndex * columnCount + colIndex + (before ? -1 : 0) : -1);
    }
  },
  drop: function drop(props, monitor, component) {
    if (!monitor.didDrop()) {
      var item = monitor.getItem();

      if (typeof props.onDrop === "function") {
        var gridComponent = component.getGrid();

        if (gridComponent) {
          var data = gridComponent.getData();
          var items = [item.data];
          var itemBefore = gridComponent.getDroppedAfterItem();
          var itemKey = gridComponent.getItemKey();
          var itemIdsToRemove = new Set(items.map(function (it) {
            return itemKey(it);
          }));
          var newData = data.filter(function (it) {
            return !itemIdsToRemove.has(itemKey(it));
          });
          var insertAt = itemBefore ? newData.findIndex(function (it) {
            return itemKey(itemBefore) === itemKey(it);
          }) + 1 : 0;
          newData.splice.apply(newData, [insertAt, 0].concat(items));
          props.onDrop({
            items: items,
            itemBefore: itemBefore,
            data: newData
          });
        }
      }
    }
  }
};

var dropPropsExpander = function dropPropsExpander(connect, monitor) {
  // which extra props to inject into component which can be dropped to (GridDropArea)
  return {
    connectDropTarget: connect.dropTarget(),
    isDragOver: monitor.isOver(),
    canDrop: monitor.isOver() && monitor.canDrop() // using "monitor.isOver() && ..." because it has much better performance this way

  };
};

DndGridWrapper = DropTarget(["Uu5Tiles.Tile"], dropTarget, dropPropsExpander)(DndGridWrapper);
DndGridWrapper = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.DnD.withContext(DndGridWrapper);

/* harmony default export */ __webpack_exports__["default"] = (DndGridWrapper);

/***/ }),

/***/ 125:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DndDropIndicatorVertical", function() { return DndDropIndicatorVertical; });
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var uu5g04__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uu5g04__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
var _templateObject, _templateObject2;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }





function isRectSame(rect1, rect2) {
  if (!rect1 || !rect2) return rect1 === rect2;
  return rect1.left === rect2.left && rect1.top === rect2.top && rect1.right === rect2.right && rect1.bottom === rect2.bottom;
}

var DndDropIndicatorVertical = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Reference.forward(function DndDropIndicatorVertical(_ref, ref) {
  var isDragOver = _ref.isDragOver;

  var _useState = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useState"])({}),
      _useState2 = _slicedToArray(_useState, 2),
      _useState2$ = _useState2[0],
      firstItemRect = _useState2$.firstItemRect,
      secondItemRect = _useState2$.secondItemRect,
      _setPosition = _useState2[1];

  var elRef = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useRef"])();
  Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useImperativeHandle"])(ref, function () {
    return {
      setPosition: function setPosition(firstItemRect, secondItemRect) {
        _setPosition(function (position) {
          return isRectSame(position.firstItemRect, firstItemRect) && isRectSame(position.secondItemRect, secondItemRect) ? position : {
            firstItemRect: firstItemRect,
            secondItemRect: secondItemRect
          };
        });
      }
    };
  }); // compute indicator position based on tile item rectangles

  var element = elRef.current;

  var _useState3 = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useState"])(),
      _useState4 = _slicedToArray(_useState3, 2),
      forceUpdate = _useState4[1];

  var cssPos = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useMemo"])(function () {
    var result = {};

    if (element && element.offsetParent) {
      // necessary due to jest tests
      var relativeElRect = element.offsetParent.getBoundingClientRect();

      if (!firstItemRect && secondItemRect) {
        // before 1st tile item in a row => position to the left edge of the item
        result.left = secondItemRect.left - relativeElRect.left;
        result.top = secondItemRect.top - relativeElRect.top;
        result.height = secondItemRect.height;
      } else if (firstItemRect && !secondItemRect) {
        // after last tile item in a row => position to the right edge of the item
        result.left = firstItemRect.right - relativeElRect.left;
        result.top = firstItemRect.top - relativeElRect.top;
        result.height = firstItemRect.height;
      } else if (firstItemRect && secondItemRect) {
        // between 2 tile items
        result.left = (firstItemRect.right + secondItemRect.left) / 2 - relativeElRect.left;
        result.top = Math.min(firstItemRect.top, secondItemRect.top) - relativeElRect.top;
        result.height = Math.max(firstItemRect.bottom, secondItemRect.bottom) - relativeElRect.top - result.top;
      } else {
        // into empty grid
        result.left = 0;
        result.top = 0;
        result.height = relativeElRect.bottom - relativeElRect.top;
      }
    }

    return result; // eslint-disable-next-line uu5/hooks-exhaustive-deps
  }, [firstItemRect, secondItemRect, element]);
  var shouldRenderPositioned = isDragOver;
  Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useLayoutEffect"])(function () {
    if (shouldRenderPositioned) forceUpdate({}); // force update to recompute cssPos as now we have elRef.current
    // eslint-disable-next-line uu5/hooks-exhaustive-deps
  }, []);
  var canUseCssTransitionRef = Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useRef"])(false);
  Object(uu5g04_hooks__WEBPACK_IMPORTED_MODULE_1__["useLayoutEffect"])(function () {
    canUseCssTransitionRef.current = shouldRenderPositioned;
  }, [shouldRenderPositioned]);
  var result;
  var className = _config_config_js__WEBPACK_IMPORTED_MODULE_2__["default"].Css.css(_templateObject || (_templateObject = _taggedTemplateLiteral(["position: absolute; left: 0; top: 0; pointer-events: none;"])));

  if (shouldRenderPositioned) {
    className += " " + _config_config_js__WEBPACK_IMPORTED_MODULE_2__["default"].Css.css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n        ", "\n        border: 3px solid #3991E1;\n        border-radius: 3px;\n      "])), canUseCssTransitionRef.current ? "transition: transform 0.15s, height 0.15s;" : "");
    result = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create("div", {
      ref: elRef,
      className: className,
      style: {
        height: cssPos.height,
        transform: "translateX(-50%) translate(".concat(cssPos.left, "px, ").concat(cssPos.top, "px)")
      }
    });
  } else {
    result = uu5g04__WEBPACK_IMPORTED_MODULE_0___default.a.Common.Element.create("div", {
      ref: elRef,
      className: className
    });
  }

  return result;
});
/* harmony default export */ __webpack_exports__["default"] = (DndDropIndicatorVertical);

/***/ })

}]);