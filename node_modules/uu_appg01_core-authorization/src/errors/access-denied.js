"use strict";
const AuthorizationError = require("./authorization-error.js");

/**
 * Error raised in case authenticated identity is not allowed
 * to execute requested functionality.
 */
class AccessDenied extends AuthorizationError {
  /**
   * Creates new instance of error.
   * @param {AuthorizationResult} authorizationResult Authorization result
   * @param {string} message Error message
   * @param {Error} cause Error cause
   */
  constructor(authorizationResult, message, cause = null) {
    if (typeof authorizationResult === "string") {
      cause = message;
      message = authorizationResult;
      authorizationResult = null;
    }
    super(message, cause);
    this._authorizationResult = authorizationResult;
  }

  /**
   * Returns authorization result.
   * @returns {AuthorizationResult} Authorization result
   */
  getAuthorizationResult() {
    return this._authorizationResult;
  }
}

module.exports = AccessDenied;
