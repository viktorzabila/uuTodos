"use strict";

const { UuObjectDao } = require("uu_appg01_objectstore");

class SysProfileMongo extends UuObjectDao {

  async createSchema() {
    await super.createIndex({ awid: 1, profile: 1 }, { unique: true });
  }

  create(input) {
    if (Array.isArray(input)) {
      return super.insertMany(input);
    } else {
      return super.insertOne(input);
    }
  }

  get(awid) {
    return super.findOne({ awid: awid });
  }

  listByAwid(awid){
    return super.find({ awid: awid });
  }

  getByProfile(awid, profile) {
    return super.findOne({ awid: awid, profile: profile });
  }

  listByProfileList(awid, profileList) {
    return super.find(
      {
        awid: awid,
        profile: {
          $in: profileList
        }
      },
      {},
      {},
      {
        _id: 0,
        profile: 1,
        roleGroupUri: 1
      }
    );
  }

  getCount(awid) {
    return super.count({ awid });
  }

  update(uuObject) {
    uuObject = { ...uuObject };

    let awid = uuObject["awid"];
    delete uuObject["awid"];

    let profile = uuObject["profile"];
    delete uuObject["profile"];

    return super.findOneAndUpdate(
      {
        profile: profile,
        awid: awid
      },
      uuObject,
      "NONE"
    );
  }

  deleteByAwid(awid) {
    return super.deleteMany({ awid: awid });
  }

  deleteByCode(awid, profile) {
    return super.deleteOne({ awid, profile });
  }

  listByAppProfile(awid, profileList = null, pageInfo = {}) {
    let filter = { awid };

    if (Array.isArray(profileList) && profileList.length) {
      filter.profile = { $in: profileList };
    } else if (typeof profileList == "string") {
      filter.profile = profileList;
    }

    return super.find(filter, pageInfo, { "sys.cts": -1 });
  }
}

module.exports = SysProfileMongo;
