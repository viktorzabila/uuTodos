"use strict";

const { UuObjectDao } = require("uu_appg01_objectstore");

class SysPermissionMongo extends UuObjectDao {
  async createSchema() {
    await super.createIndex(
      {
        awid: 1,
        uuIdentity: 1,
        profile: 1
      },
      { unique: true }
    );
    await super.createIndex(
      {
        awid: 1,
        profile: 1
      }
    );
    await super.createIndex(
      {
        expireAt: 1
      },
      {
        expireAfterSeconds: 0
      }
    );
  }

  create(uuObjects) {
    return super.insertMany(uuObjects);
  }

  get(awid, id) {
    return super.findOne({ awid: awid, id: id });
  }

  getByUuIdentityAndProfile(awid, uuIdentity, profile) {
    let filter = { awid, uuIdentity, profile };
    return super.find(filter);
  }

  getCount(awid) {
    return super.count({ awid: awid });
  }

  getProfilesByUuIdentity(awid, uuIdentity) {
    return super.aggregate([
      {
        $match: {
          awid: awid,
          uuIdentity: uuIdentity
        }
      },
      {
        $group: {
          _id: "$uuIdentity",
          profileList: {
            $push: "$profile"
          }
        }
      }
    ]);
  }

  update(uuObject) {
    return super.findOneAndUpdate(
      {
        id: uuObject["id"],
        awid: uuObject["awid"]
      },
      uuObject,
      "NONE"
    );
  }

  delete(awid, id) {
    return super.deleteOne({ awid: awid, id: id });
  }

  deleteByUuIdentityAndProfile(awid, uuIdentityList, profile) {

    if (typeof uuIdentityList === "string") {
      uuIdentityList = [uuIdentityList];
    }

    return super.deleteMany({
      awid: awid,
      uuIdentity: {
        $in: uuIdentityList
      },
      profile: profile
    });
  }

  listByUuIdentityAndAppProfile(awid, query, pageInfo = {}) {

    let filter = {};

    filter["awid"] = awid;

    if (query["profileList"]) {
      let profiles = query["profileList"];
      if (Array.isArray(profiles)) {
        filter["profile"] = {
          $in: query["profileList"]
        };
      } else {
        filter["profile"] = query["profileList"];
      }
    }

    if (query["uuIdentityList"]) {
      let ids = query["uuIdentityList"];
      if (Array.isArray(ids)) {
        filter["uuIdentity"] = {
          $in: query["uuIdentityList"]
        };
      } else {
        filter["uuIdentity"] = query["uuIdentityList"];
      }
    }

    return super.find(filter, pageInfo, { "sys.cts": -1 });
  }
}

module.exports = SysPermissionMongo;
