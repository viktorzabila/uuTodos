"use strict";

const {UuObjectDao} = require("uu_appg01_objectstore");

class SysAppWorkspaceMongo extends UuObjectDao {
  async createSchema() {
    await super.createIndex(
      {
        awid: 1
      },
      {unique: true}
    );
    await super.createIndex(
      {
        awid: 1,
        sysState: 1
      }
    );
  }

  create(appWorkspace, lock) {
    return super.insertOne(appWorkspace, lock);
  }

  getByAwid(awid) {
    return super.findOne({awid: awid});
  }

  getByArtifactUri(artUri) {
    return super.findOne({artifactUri: artUri});
  }

  updateByAwid(awid, appWorkspace) {
    return super.findOneAndUpdate({awid}, appWorkspace, "NONE");
  }

  updateState(awid, sysState) {
    return super.findOneAndUpdate({awid}, {sysState}, "NONE");
  }

  update(appWorkspace, lock) {

    if (!appWorkspace.previousSysState) {
      appWorkspace = {...appWorkspace};
      if (appWorkspace.$unset) {
        appWorkspace.$unset.previousSysState = 1;
      } else {
        appWorkspace.$unset = {previousSysState: 1};
      }
    }

    return super.findOneAndUpdate(
      {
        awid: appWorkspace.awid
      },
      appWorkspace,
      "NONE",
      lock
    );
  }


  deleteByAwid(awid) {
    return super.deleteOne({awid: awid});
  }

  getCount() {
    return super.count({});
  }

  async lockOne(awid, lock) {
    return await super.lockOne({awid}, lock);
  }

  async unlockOne(awid, lock) {
    return await super.unlockOne({awid}, lock);
  }


  /**
   * Retrieve workspaces NOT in given state but with given awid, if defined
   *
   * @param excludedStateList {Array}
   * @param awidList {Array} - when falsy, list all awids
   * @param pageInfo {Object}
   * @returns {Array}
   */
  listByExcludedStateListAndAwidList(excludedStateList, awidList, pageInfo = {}) {
    let filter = {
      sysState: {$nin: excludedStateList}
    };
    if (awidList) {
      filter.awid = {$in: awidList};
    }
    return super.find(filter, pageInfo);
  }

  listByStateListAndAwidList(stateList = [], awidList = [], pageInfo = {}) {
    let filter = {};
    if (stateList.length > 0 && awidList.length > 0) {
      filter = {
        sysState: {$in: stateList},
        awid: {$in: awidList}

      };
    }
    else if (stateList.length > 0)
    {
      filter = {
        sysState: {$in: stateList}
      };
    }
    else if (awidList.length > 0)
    {
      filter = {
        awid: {$in: awidList}
      };
    }

    return super.find(filter, pageInfo);
  }
}

module.exports = SysAppWorkspaceMongo;
