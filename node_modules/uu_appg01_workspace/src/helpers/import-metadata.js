class ImportMetadata {

  constructor(awid, schema, indexList, recordCount) {
    this.awid = awid;
    this.schema = schema;
    this.indexList = indexList;
    this.binary = false;
    this.match = schema.match(/(.+)\.(chunks|files)$/);
    this.recordCount = recordCount;

  }

  static parse(validMetadata) {
    return new ImportMetadata(validMetadata.awidList[0].awid, validMetadata.schemaName, validMetadata.indexList, validMetadata.awidList[0].itemCount);
  }

  getAwid() {
    return this.awid;
  }

  getSchema() {
    return this.schema;
  }

  getIndexList() {
    return this.indexList;
  }

  setBinary(value) {
    this.binary = value;
  }

  isBinary() {
    return this.binary;
  }

  isBinaryAux() {
    return !!this.match;
  }

  getBinarySchema() {
    if (!this.isBinaryAux()) {
      return null;
    }
    return this.match[1];
  }

  isBinaryFiles(){
    return this.isBinaryAux() && this.match[2] === "files";
  }

  isBinaryChunks(){
    return this.isBinaryAux() && this.match[2] === "chunks";
  }

  getRecordCount(){
    return this.recordCount;
  }

}

module.exports = ImportMetadata;
