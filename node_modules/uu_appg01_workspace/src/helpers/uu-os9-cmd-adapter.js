"use strict";

const AppClient = require("uu_appg01_core-appclient");
const { Session } = require("uu_appg01_core-authentication");
const { Config, OptsReader } = require("uu_appg01_core-utils");

const DEFAULT_AUTHORIZATION_TIMEOUT = 5 * 1000;

const ADAPTER_INTERCEPTORS = [
  AppClient.PerflogHandler,
  // TODO Use custom error handler
  AppClient.RemoteErrorHandler,
  AppClient.TransformParametersHandler
];

class UuOs9CmdAdapter {
  constructor() {
    let workspaceOpts = new OptsReader({
      verifySsl: Config.get("uu_app_workspace_role_management_verify_ssl"),
      requestTimeout: Config.get("uu_app_workspace_authorization_timeout")
    });
    this._client = new AppClient.AppClient({
      verifySsl: workspaceOpts.getBoolean("verifySsl", true),
      requestTimeout: workspaceOpts.getNumber("requestTimeout", DEFAULT_AUTHORIZATION_TIMEOUT) / 1000,
      interceptors: ADAPTER_INTERCEPTORS
    });
  }

  async get(url, params = {}, session) {
    if (params instanceof Session) {
      session = params;
      params = {};
    }

    let callToken = session ? await session.getCallToken(url) : null;
    let headers = callToken ? { Authorization: callToken } : {};

    return await this._client.get(url, params, { headers });
  }
}

module.exports = UuOs9CmdAdapter;
