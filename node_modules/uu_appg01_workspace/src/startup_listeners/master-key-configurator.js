const { MasterKeyDoesNotExistError, InvalidMasterKeyLengthError } = require("../api/errors/startup-errors.js");
const STARTUP_LISTENER_ORDER = 500;
const MIN_KEY_LENGTH = 32;

class MasterKeyConfigurator {
  constructor() {
    this.order = STARTUP_LISTENER_ORDER;
  }

  /**
   * Startup listener which provides default master key configuration.
   */
  async onStartup() {
    const sysAppSecretStoreAbl = require("./../abl/sys-app-secret-store-abl");

    if (sysAppSecretStoreAbl.enableEncryption) {
      const masterKey1 = sysAppSecretStoreAbl.masterKey1;
      const masterKey2 = sysAppSecretStoreAbl.masterKey2;

      if (!masterKey1 || !masterKey2) {
        throw new MasterKeyDoesNotExistError(sysAppSecretStoreAbl.activeSlot);
      }

      if (this._checkMinMasterKeyLength(masterKey1, masterKey2)) {
        throw new InvalidMasterKeyLengthError(sysAppSecretStoreAbl.activeSlot);
      }
    }
  }

  _checkMinMasterKeyLength(mk1, mk2) {
    return !!(
      this._getByteSize(mk1) < MIN_KEY_LENGTH || this._getByteSize(mk2) < MIN_KEY_LENGTH
    );
  }

  _getByteSize(str) {
    return Buffer.from(str).length;
  }
}

module.exports = MasterKeyConfigurator;
