"use strict";

const SysAppInstanceAbl = require("../../abl/sys-app-instance-abl");
const AppClientTokenService = require("../../app-client-token-service");

class SysAppInstanceController {
  init(ucEnv) {
    return SysAppInstanceAbl.init({
      asid: ucEnv.uri.getAwid(),
      dtoIn: ucEnv.getDtoIn(),
      ucUri: ucEnv.uri,
      authorizationResult: ucEnv.getAuthorizationResult(),
      uuIdentity: ucEnv
        .getSession()
        .getIdentity()
        .getUuIdentity(),
      appClientToken: AppClientTokenService.getToken(ucEnv)
    });
  }

  get(ucEnv) {
    const asid = ucEnv.uri.getAwid();
    return SysAppInstanceAbl.get(asid);
  }

  set(ucEnv) {
    const asid = ucEnv.uri.getAwid();
    const dtoIn = ucEnv.getDtoIn();
    const session = ucEnv.getSession();
    return SysAppInstanceAbl.set(asid, dtoIn, session.getIdentity().getUuIdentity());
  }

  setActiveSysState(ucEnv) {
    const asid = ucEnv.uri.getAwid();
    const dtoIn = ucEnv.getDtoIn();
    const session = ucEnv.getSession();
    return SysAppInstanceAbl.setActiveSysState(asid, dtoIn, session.getIdentity().getUuIdentity());
  }

  setRestrictedSysState(ucEnv) {
    const asid = ucEnv.uri.getAwid();
    const dtoIn = ucEnv.getDtoIn();
    const session = ucEnv.getSession();
    return SysAppInstanceAbl.setRestrictedSysState(asid, dtoIn, session.getIdentity().getUuIdentity());
  }
}

module.exports = new SysAppInstanceController();
