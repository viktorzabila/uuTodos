const WorkspaceError = require("./workspace-error.js");

const Drop = {
  UC_CODE: `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}sys/uuAppDataStore/drop/`,

  InvalidDtoInError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "DtoIn is not valid.";
      this.code = `${Drop.UC_CODE}invalidDtoIn`;
    }
  },
  DevelopmentModeNotActive: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "The application is not deployed with development mode enabled.";
      this.code = `${Drop.UC_CODE}developmentModeNotActive`;
      this.status = 503;
    }
  },
  DataStoreDisabled: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message =
        "The application has disabled the persistence layer. Thus, it does not have any uuSubAppDataStore to drop.";
      this.code = `${Drop.UC_CODE}dataStoreDisabled`;
    }
  },
  DataStoreNotConfigured: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "The uuSubAppDataStore specified in dtoIn is not configured in the application.";
      this.code = `${Drop.UC_CODE}dataStoreNotConfigured`;
    }
  }
};

const StatsGet = {
  UC_CODE: `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}sys/uuAppDataStore/stats/get/`,

  sysDataStoreStatsDoNotExist: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Data stores statistics for this workspace have not been calculated yet.";
      this.code = `${StatsGet.UC_CODE}sysDataStoreStatsDoNotExist`;
    }
  }
};

const StatsList = {
  UC_CODE: `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}sys/uuAppDataStore/stats/list/`,

  InvalidDtoInError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "DtoIn is not valid.";
      this.code = `${StatsList.UC_CODE}invalidDtoIn`;
    }
  }
};

const StatsCalculate = {
  UC_CODE: `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}sys/uuAppDataStore/stats/calculate/`,

  InvalidDtoInError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "DtoIn is not valid.";
      this.code = `${StatsCalculate.UC_CODE}invalidDtoIn`;
    }
  },
  CalculationAlreadyInProgress: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "SysDataStoreStats calculation already in progress.";
      this.code = `${StatsCalculate.UC_CODE}calculationAlreadyInProgress`;
    }
  },
  CalculatedRecently: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "SysDataStoreStats calculation was recently recalculated.";
      this.code = `${StatsCalculate.UC_CODE}calculatedRecently`;
    }
  },
  PreviousCalculationFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "SysDataStoreStats previous calculation has not finished.";
      this.code = `${StatsCalculate.UC_CODE}previousCalculationFailed`;
    }
  },
  UpdateByDaoFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Update SysDataStoreStats by DAO failed.";
      this.code = `${StatsCalculate.UC_CODE}updateByDaoFailed`;
    }
  },
  UnlockByDaoFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "SysDataStoreStats unlock failed.";
      this.code = `${StatsCalculate.UC_CODE}unlockByDaoFailed`;
    }
  },

  UnknownDataStoreType: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "SysDataStoreStats unknown type and/or realization of data store.";
      this.code = `${StatsCalculate.UC_CODE}unknownDataStoreType`;
    }
  },
  CannotConnect: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "SysDataStoreStats cannot _connect to data store.";
      this.code = `${StatsCalculate.UC_CODE}cannotConnect`;
    }
  },
  CurrentCalculationFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "SysDataStoreStats current calculation failed.";
      this.code = `${StatsCalculate.UC_CODE}currentCalculationFailed`;
    }
  }
};

const StatsPrivilegedCalculate = {
  UC_CODE: `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}sys/uuAppDataStore/stats/privilegedCalculate/`,

  InvalidDtoInError: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "DtoIn is not valid.";
      this.code = `${StatsPrivilegedCalculate.UC_CODE}invalidDtoIn`;
    }
  },
  CalculationAlreadyInProgress: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "uuAppDataStore stats of one or more required awid are being calculated. Check the status using sys/uuAppDataStore/stats/list uuCmd.";
      this.code = `${StatsPrivilegedCalculate.UC_CODE}calculationAlreadyInProgress`;
    }
  },
  SysUuAppWorkspaceDoesNotExist: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Not all awids specified in dtoIn.awidList exist on this asid.";
      this.code = `${StatsPrivilegedCalculate.UC_CODE}uuAppWorkspaceDoesNotExist`;
    }
  },
  CalculatedRecently: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "uuAppDataStore stats for all selected awids were calculated recently.";
      this.code = `${StatsPrivilegedCalculate.UC_CODE}calculatedRecently`;
    }
  },
  UpdateFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Update of uuObject SysDataStoreStats failed.";
      this.code = `${StatsPrivilegedCalculate.UC_CODE}updateFailed`;
    }
  },
};

module.exports = {
  Drop,
  StatsGet,
  StatsList,
  StatsCalculate,
  StatsPrivilegedCalculate
};
