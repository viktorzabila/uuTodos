const WorkspaceError = require("./workspace-error.js");
const { UseCaseError } = require("uu_appg01_core-appserver");

const AppClientService = {
  UC_CODE: `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}sys/appClientToken/`,
  UnexpectedError: class extends UseCaseError {
    constructor(message, cause = null) {
      super({ status: 500, cause: cause });
      this.code = `${AppClientService.UC_CODE}unexpectedError`;
      this.message = message;
    }
  },
  InvalidFormat: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.code = `${AppClientService.UC_CODE}invalidFormat`;
      this.message = "Unable to parse provided uuAppClientToken";
    }
  }
};

const ListKeys = {
  UC_CODE: `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}sys/appClientToken/listKeys/`,
  KeysNotInitialized: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.code = `${ListKeys.UC_CODE}keysNotInitialized`;
      this.message = "Keys have not been initialized.";
    }
  }
};

const GetPrivateKey = {
  UC_CODE: `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}sys/appClientToken/getPrivateKey/`,
  KeysNotInitialized: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.code = `${GetPrivateKey.UC_CODE}keysNotInitialized`;
      this.message = "Keys have not been initialized.";
    }
  }
};

module.exports = {
  AppClientService,
  ListKeys,
  GetPrivateKey
};
