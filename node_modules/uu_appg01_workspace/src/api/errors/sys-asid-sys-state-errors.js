const WorkspaceError = require("./workspace-error.js");

class ForbiddenAsidSysStateError extends WorkspaceError {
  static get ERROR_CODE() {
    return `${WorkspaceError.APP_WORKSPACE_LIB_ERROR_PREFIX}forbiddenAsidSysState`;
  }

  constructor(msg, paramMap) {
    super({}, paramMap);
    this.message = msg || "This UC can not be run in the current sysState of the application.";
    this.code = this.constructor.ERROR_CODE;
    this.status = 503;

    if (this.paramMap && this.paramMap.adviceNote && this.paramMap.adviceNote.estimatedEndTime) {
      if (typeof this.paramMap.adviceNote.estimatedEndTime === "string") {
        this.headers["Retry-After"] = new Date(this.paramMap.adviceNote.estimatedEndTime).toISOString();
      } else {
        this.headers["Retry-After"] = this.paramMap.adviceNote.estimatedEndTime.toISOString();
      }
    }
  }
}

module.exports = {
  ForbiddenAsidSysStateError
};
