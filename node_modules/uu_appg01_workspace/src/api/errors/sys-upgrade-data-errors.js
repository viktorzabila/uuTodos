const WorkspaceError = require("./workspace-error.js");

const SysUpgradeData = {
  UC_CODE: `${WorkspaceError.APP_INSTANCE_ERROR_PREFIX}upgrade/`,

  InvalidDtoIn: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "DtoIn is not valid.";
      this.code = `${SysUpgradeData.UC_CODE}invalidDtoIn`;
    }
  },

  UpgradeDataFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Upgrade data failed.";
      this.code = `${SysUpgradeData.UC_CODE}upgradeDataFailed`;
    }
  },

  UpgradeAsidAppProfilesFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Upgrade asid application profiles failed.";
      this.code = `${SysUpgradeData.UC_CODE}upgradeAsidAppProfilesFailed`;
    }
  },

  UpgradeAwidAppProfilesFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Upgrade awid application profiles failed.";
      this.code = `${SysUpgradeData.UC_CODE}upgradeAwidAppProfilesFailed`;
    }
  },

  UpgradeSysAppConfigFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Upgrade of sysAppConfig failed.";
      this.code = `${SysUpgradeData.UC_CODE}upgradeSysAppConfigFailed`;
    }
  },

  UpgradeSysAppWorkspaceConfigFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Upgrade of sysAppWorkspaceConfig failed.";
      this.code = `${SysUpgradeData.UC_CODE}upgradeSysAppWorkspaceConfigFailed`;
    }
  },

  SysUuAppWorkspaceIndexCreateFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Index \"awid_1_sysState_1\" for collection sysUuAppWorkspace create failed.";
      this.code = `${SysUpgradeData.UC_CODE}sysUuAppWorkspaceIndexCreateFailed`;
    }
  },

  SysAuditLogRecordCollectionCreateIndexFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Failed to create index for collection sysAuditLogRecord.";
      this.code = `${SysUpgradeData.UC_CODE}sysAuditLogRecordCollectionCreateIndexFailed`;
    }
  },

  UpgradeSysDataStoreStatsCollectionFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Upgrade of sysDataStoreStats collection failed.";
      this.code = `${SysUpgradeData.UC_CODE}upgradeSysDataStoreStatsCollectionFailed`;
    }
  },

  UpgradeSysUuSubAppInstanceFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Upgrade of sysUuSubAppInstance failed.";
      this.code = `${SysUpgradeData.UC_CODE}upgradeSysUuSubAppInstanceFailed`;
    }
  },

  UpgradeSysAppSecretStoreFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Upgrade of sysAppSecretStore failed.";
      this.code = `${SysUpgradeData.UC_CODE}upgradeSysAppSecretStoreFailed`;
    }
  },

  SysProfileCollectionCreateAttributesFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Creating of attributes sysProfile collection failed.";
      this.code = `${SysUpgradeData.UC_CODE}sysProfileCollectionCreateAttributesFailed`;
    }
  },

  CreateSysProfileIndexFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Failed to create indexes for collection sysProfile.";
      this.code = `${SysUpgradeData.UC_CODE}createSysProfileIndexFailed`;
    }
  },

  SysPermissionCollectionCreateAttributeFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Creating of new attribute sysPermission collection failed.";
      this.code = `${SysUpgradeData.UC_CODE}sysPermissionCollectionCreateAttributeFailed`;
    }
  },

  CreateSysPermissionIndexesFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Failed to create indexes for collection sysPermission.";
      this.code = `${SysUpgradeData.UC_CODE}createSysPermissionIndexesFailed`;
    }
  },

  CreateSysUuAppSecretCollectionFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Creating of new collection sysUuAppSecret failed.";
      this.code = `${SysUpgradeData.UC_CODE}createSysUuAppSecretCollectionFailed`;
    }
  },

  DeleteUuObjectFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Deleting of uuObject with parameter keySet uuAppClientTokenValidation failed.";
      this.code = `${SysUpgradeData.UC_CODE}deleteUuObjectFailed`;
    }
  },

  CreateAttributeSecretCodeSecretSetFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Creating of new attributes secret, code and secretSet failed.";
      this.code = `${SysUpgradeData.UC_CODE}createAttributeSecretCodeSecretSetFailed`;
    }
  },
};

const SysUpgradeCleanup = {
  UC_CODE: `${WorkspaceError.APP_INSTANCE_ERROR_PREFIX}upgradeCleanup/`,

  CleanupDataFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Cleanup data failed.";
      this.code = `${SysUpgradeCleanup.UC_CODE}cleanupDataFailed`;
    }
  },

  DeleteSysAppWorkspaceCollectionFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Failed to delete sysAppWorkspace collection.";
      this.code = `${SysUpgradeCleanup.UC_CODE}deleteSysAppWorkspaceCollectionFailed`;
    }
  },

  DeleteSysAppWorkspaceConfigCollectionFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Failed to delete sysAppWorkspaceConfig collection.";
      this.code = `${SysUpgradeCleanup.UC_CODE}deleteSysAppWorkspaceConfigCollectionFailed`;
    }
  },

  SysProfileCollectionDeleteAttributesFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Deleting of attributes sysProfile collection failed.";
      this.code = `${SysUpgradeCleanup.UC_CODE}sysProfileCollectionDeleteAttributesFailed`;
    }
  },

  SysPermissionCollectionDeleteAttributesFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Deleting of attributes sysPermission collection failed.";
      this.code = `${SysUpgradeCleanup.UC_CODE}sysPermissionCollectionDeleteAttributesFailed`;
    }
  },

  DeleteSysDataStoreStatsCollectionFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Failed to delete sysDataStoreStats collection.";
      this.code = `${SysUpgradeCleanup.UC_CODE}deleteSysDataStoreStatsCollectionFailed`;
    }
  },

  DeleteSysKeyStoreCollectionFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Failed to delete sysKeyStore collection.";
      this.code = `${SysUpgradeCleanup.UC_CODE}deleteSysKeyStoreCollectionFailed`;
    }
  },

  DeleteSysAppConfigCollectionFailed: class extends WorkspaceError {
    constructor() {
      super(...arguments);
      this.message = "Failed to delete sysAppConfig collection.";
      this.code = `${SysUpgradeCleanup.UC_CODE}deleteSysAppConfigCollectionFailed`;
    }
  },
};

module.exports = {
  SysUpgradeData,
  SysUpgradeCleanup,
};
