"use strict";

const SysPermissionAbl = require("../../abl/sys-permission-abl.js");

class Permission {
  /**
   * Adds rights to a given profile for a defined set of identities.
   *
   * @param {string} awid
   * @param {string} profile
   * @param {(string|string[])} uuIdentityList string or array of strings with identity uuIdentities
   * @param {number} ttl allows to create temporary permission (will be automatically removed after specified time in seconds)
   * @returns {Promise<Object>} itemList of sysPermissions
   */
  async create(awid, profile, uuIdentityList, ttl) {
    return await SysPermissionAbl.create(awid, { profile, uuIdentityList, ttl });
  }

  /**
   * Deletes rights from a given profile for a defined set of identities.
   *
   * @param {string} awid
   * @param {string} profile
   * @param {(string|string[])} uuIdentityList string or array of strings with uuIdentities
   * @returns {Promise<Object>} uuAppErrorMap
   */
  async delete(awid, profile, uuIdentityList) {
    return await SysPermissionAbl.deletePermission(awid, { profile, uuIdentityList });
  }

  /**
   * Provides a paged list of set of rights in a standard way. It is possible to filter by profiles and indentities.
   *
   * @param {string} awid
   * @param {Object} options attributes same as sys/uuAppWorkspace/permission/list uuCmd
   * @returns {Promise<*>}
   */
  async list(awid, options = {}) {
    return await SysPermissionAbl.listPermissions(awid, options);
  }
}

module.exports = new Permission();
