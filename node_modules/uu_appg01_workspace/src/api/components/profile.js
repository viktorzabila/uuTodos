"use strict";

const sysProfileAbl = require("../../abl/sys-profile-abl.js");

class Profile {
  /**
   * Sets rights to a given application profile.
   *
   * @param {string} awid
   * @param {string} profile uuAppProfile code from profiles.json ("Readers"|"Authorities",...)
   * @param {string} roleGroupUri URI of a role group. If null uri (ues:[-1]:[-1]) is set, roleUri is set to null.
   * @returns {Promise<Object>} uuObject sysProfile
   */
  async set(awid, profile, roleGroupUri) {
    return await sysProfileAbl.setAppProfile(awid, { profile, roleGroupUri });
  }

  /**
   * Provides information about a given profile.
   *
   * @param {string} awid
   * @param {string} profile code
   * @returns {Promise<Object>} uuObject sysProfile
   */
  async get(awid, profile) {
    return await sysProfileAbl.getAppProfile(awid, { profile });
  }

  /**
   * Provides a paged profile list. It is possible to filter by profile codes.
   *
   * @param {string} awid
   * @param {Object} options attributes same as sys/uuAppWorkspace/profile/list uuCmd
   * @returns {Promise<Object>} itemList of sysProfiles
   */
  async list(awid, options = {}) {
    return await sysProfileAbl.listAppProfiles(awid, options);
  }

  /**
   * Updates profiles of uuAppWorkspace according to definition in profiles.json.
   *
   * @param {string[]} [awidList] list of awids to be updated. If empty, all awids are updated.
   * @returns {Promise<Object>} updated awids
   */
  async update(awidList) {
    return sysProfileAbl.updateProfiles({ awidList });
  }
}

module.exports = new Profile();
