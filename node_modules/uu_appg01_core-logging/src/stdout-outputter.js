"use strict";

const MessageFormatter = require("./message-formatter.js");

class StdoutOutputter {

  constructor(formatter = null) {
    this._formatter = formatter || new MessageFormatter();
  }

  setFormatter(formatter) {
    this._formatter = formatter;
    return this;
  }

  getFormatter() {
    return this._formatter;
  }

  setSeverityLabels(severityLabels) {
    this._formatter.setSeverityLabels(severityLabels);
    return this;
  }

  getSeverityLabels() {
    return this._formatter.getSeverityLabels();
  }

  setMessageFormat(messageFormat) {
    this._formatter.setMessageFormat(messageFormat);
    return this;
  }

  getMessageFormat() {
    return this._formatter.getMessageFormat();
  }

  setErrorFormat(errorFormat) {
    this._formatter.setErrorFormat(errorFormat);
    return this;
  }

  getErrorFormat() {
    return this._formatter.getErrorFormat();
  }

  setCauseFormat(causeFormat) {
    this._formatter.setCauseFormat(causeFormat);
    return this;
  }

  getCauseFormat() {
    return this._formatter.getCauseFormat();
  }

  async write(datetime, name, level, message, error) {
    let formattedMessage = this._formatter.formatMessage(datetime, name, level, message, error);
    // error is included in the formatted message by default
    console.log(formattedMessage);
  }

}

module.exports = StdoutOutputter;
