"use strict";
const RetryHandlerCore = require("./retry-handler-core.js");

/**
 * Interceptor for retry policy working.
 */
class RetryHandler extends RetryHandlerCore {
  constructor(next, options = null) {
    super(next, options);
  }

  _containStream(body = {}) {
    if (body instanceof FormData) {
      return this._isStreamInFormData(body);
    }

    return !!this._isStream(body);
  }

  _isStreamInFormData(formData) {
    if (formData == null || !(formData instanceof FormData)) {
      return false;
    }

    let entries = formData.entries();

    if (typeof entries[Symbol.iterator] !== "function") {
      return false;
    }

    for (let data of entries) {
      const [, value] = data;

      if (value instanceof Blob) {
        return true;
      }
    }

    return false;
  }

  _isStream(value) {
    return value instanceof Blob;
  }
}

module.exports = RetryHandler;
