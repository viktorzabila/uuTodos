const path = require("path");
const { exec, resolveByTemplateType } = require("../tools/helpers.js");

module.exports = class Test {
  constructor(config) {
    this.config = config;
  }

  async process() {
    let modules = this.config.getWorkspaceLibraryList();
    console.log("Starting projects: " + modules.map((it) => it.name).join(", "));

    // start in parallel as 'npm start' is not supposed to terminate on its own
    let promises = [];
    for (let { name, pkg, type } of modules) {
      if (!pkg.scripts.start || resolveByTemplateType(path.join(__dirname, "start.js"), type) == null) continue;
      let promise = exec("npm start -- " + this.config.toCommandLineArgs().join(" "), {
        cwd: path.resolve(name),
        env: {
          ...process.env,
          UU_APPG01_DEVKIT_SPECVC: "", // TODO Encapsulate and do for all xyz.multi.js scripts.
        },
      }); // TODO Escaping of arguments
      promises.push(promise);
    }
    await Promise.all(promises);
  }
};
