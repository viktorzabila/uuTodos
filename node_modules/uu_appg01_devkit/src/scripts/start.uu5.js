const fs = require("fs-extra");

const paths = require("../config/paths.js");
const buildHelpers = require("./common/build-helpers.js");
const helpers = require("../tools/helpers.js");
const WebpackRunner = require("./webpack/runner.js");

module.exports = class Start {
  constructor(config) {
    this.config = config;
  }
  async process() {
    fs.mkdirsSync(paths.buildDir);
    buildHelpers.checkBuildLock(this.config);

    // clean output/temporary folders
    this.config.setMode("development");
    WebpackRunner.mergeBuildConfig(this.config);
    fs.emptyDirSync(paths.buildWebpackTempDir);
    fs.emptyDirSync(this.config.get("outputPath"));

    // run build in watch mode (this includes running of pre- / post- npm scripts)
    process.env.NODE_ENV = "development";
    process.env.WATCH = "true";

    // TODO "shelljs" doesn't support exec() with passing stdio as-is (so that the program
    // can detect that the console is TTY and use colors) so we might get messages without colors => use
    // native child_process
    // NOTE Must use async variant because sync blocks the NodeJS queue and the lock above
    // needs to perform "touch" in interval (so that the lock doesn't become stale).
    await helpers.exec("npm run -s build -- --watch --mode=development " + this.config.toCommandLineArgs().join(" ")); // TODO Escaping of arguments
  }
};
