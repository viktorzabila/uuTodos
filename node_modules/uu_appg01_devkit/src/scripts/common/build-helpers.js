const path = require("path");

const paths = require("../../config/paths.js");

function checkBuildLock(config) {
  if (!process.env.UU_APPG01_DEVKIT_BUILDLOCK) {
    let lockfile = require("proper-lockfile");
    let lockAcquired;
    try {
      lockfile.lockSync(paths.buildDir, {
        stale: 5000, // 5000 is minimum allowed (used only if processed killed / VM failure; termination using signals e.g. SIGTERM is auto-cleaned)
        realpath: false,
        onCompromised: () => {},
        lockfilePath: path.resolve(paths.buildDir + "/build.lock"),
      });
      process.env.UU_APPG01_DEVKIT_BUILDLOCK = "1"; // e.g. 'npm start' starts child process and we don't want it to try to lock again
      lockAcquired = true;
    } catch (e) {
      lockAcquired = false;
    }
    if (!lockAcquired && config.get("buildRunningCheck") !== false) {
      console.error(
        `${require("chalk").red(
          "ERROR"
        )} Another build or 'npm start' is already running - wait for it or stop it to prevent built files corruption.\n(If this detection seems wrong, run the command again with '-- --no-build-running-check' added to skip this check.)\n`
      );
      process.exit(1);
    }
  }
}

module.exports = { checkBuildLock };
