const BaseReporter = require("@jest/reporters/build/base_reporter.js").default;

module.exports = class ConsoleReporter extends BaseReporter {
  constructor(...args) {
    super(...args);
    this._consoleOutputMap = {};
  }
  onTestResult(test, testResult, aggregatedResults) {
    this._consoleOutputMap[testResult.testFilePath] = testResult.console;
    if (!aggregatedResults.consoleMap) aggregatedResults.consoleMap = this._consoleOutputMap;
    return super.onTestResult(test, testResult, aggregatedResults);
  }
  onRunComplete(...args) {
    let consoleOutputCounts = Object.values(this._consoleOutputMap).map(
      (consoleOutputList) => (consoleOutputList && consoleOutputList.length) || 0
    );
    let consoleOutputCount = consoleOutputCounts.reduce((r, it) => r + it, 0);
    if (consoleOutputCount > 0) {
      let consoleOutputTestSuitesCount = consoleOutputCounts.reduce((r, it) => r + (it ? 1 : 0), 0);
      this.log(
        `There was ${require("chalk").yellow(
          `console output`
        )}: ${consoleOutputCount}, in ${consoleOutputTestSuitesCount} test suite(s)`
      );
    }
    return super.onRunComplete(...args);
  }
};
